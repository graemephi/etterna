# Usage:
#   python embedSPIRV.py path/to/shader.vert [path/to/shader.frag [...]]
#
#   Requires glslc to be in PATH.
#
# Writes a C header file containing SPIRV bytecode to standard out.
#
# The resulting bytecode is pretty small so just embedding it in the executable
# makes things easier for everyone. This isn't hooked up to the build in any way,
# as otherwise the Vulkan SDK would be a build requirement.

import datetime
import io
import os
import subprocess
import sys

shader_files = sys.argv[1:]

c_header = "// File generated by embedSPIRV.py {}.\n\n".format(datetime.datetime.utcnow())
c_header += "#include <cstdint>\n\n"

for shader_file in shader_files:
    variable_name = os.path.basename(shader_file).replace(".", "_")
    c_header += "alignas(4) static const uint8_t {}[] = {{\n    ".format(variable_name)

    try:
        proc = subprocess.run(
            ["glslc", shader_file, "-O", "--target-env=vulkan1.1", "-o", "-"],
            stderr=sys.stderr, stdout=subprocess.PIPE, check=True)
    except:
        quit()

    for i, b in enumerate(proc.stdout):
        c_header += " 0x{:02x},".format(b)
        if (i+1) % 16 == 0:
            c_header += "\n    "
    c_header = c_header.strip() + "\n};\n\n"

print(c_header)
